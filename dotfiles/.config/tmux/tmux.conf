#################
#### GENERAL ####
#################


# Set default terminal with true color support
set-option -g default-terminal 'tmux-256color'
set-option -sa terminal-features ',xterm-256color:RGB'


### REMAP PREFIX ###

# Remap prefix to C-a
unbind C-b
set -g prefix C-q
bind C-q send-prefix


### GENERAL SETTINGS ###

# Turn on Xterm Keys for modifier keys pass through
set -s extended-keys on
set-option -g xterm-keys on
set -as terminal-features 'xterm*:extkeys'
# set -as terminal-features 'wezterm*:extkeys'

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# Don't rename windows automatically
set-option -g allow-rename off

# Turn off notification activity
set-window-option -g visual-bell off
set -g visual-activity off
setw -g monitor-activity off

# Set repeat timeout
set -g repeat-time 1000

# Allow-passthrough for advanced features
# (wezterm features mainly)
set-option -g allow-passthrough on


### TMUX SENSIBLE ###

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 2s
set -g display-time 2000



########################
#### KEYBIND REMAPS ####
########################


### REMAP SESSION KEYBINDS ###
unbind f
TMUX_FZF_LAUNCH_KEY="f"
bind "F" run-shell -b "~/.config/tmux/plugins/tmux-fzf/scripts/session.sh switch"
# unmap default session switch
unbind s
unbind S
bind-key s switch-client -l


### REMAP WINDOW/PANE KEYBINDS ###

# Make rename-window clear the old name
unbind ,
bind-key , command-prompt -p "rename-window:" "rename-window '%%'; send-keys Down"

# Remap window switching
unbind -n C-p   # unbind next window from tmux-sensible
unbind -n C-n   # unbind next window from tmux-sensible
unbind L        # unbind default last window
unbind ";"      # unbind default last pane
unbind "'"      # unbind default find pane by index
bind -r ";" previous-window
bind -r "'" next-window
bind -n C-Y next-window
bind -n C-G previous-window
bind b last-window

# Remap session and window killing
unbind &
set -g @sessionist-kill-session '&'
bind X confirm-before -p "kill-window #W? (y/n)" kill-window

# Unmap old window splitting keys
unbind '"'
unbind %

# Split Panes
bind-key "\\" split-window -h -c "#{pane_current_path}"   # Split panes horizontal
#@witch-key add
bind-key "|" split-window -fh -c "#{pane_current_path}"   # Split panes horizontal full width
bind-key "-" split-window -v -c "#{pane_current_path}"    # Split panes vertically
bind-key "_" split-window -fv -c "#{pane_current_path}"   # Split panes vertically full height

# Switch Panes
bind-key h   select-pane -L
bind-key j   select-pane -D
bind-key k   select-pane -U
bind-key l   select-pane -R

# Swap Windows
bind-key -r "<" swap-window -d -t -1
bind-key -r ">" swap-window -d -t +1
bind-key "c" new-window -c "#{pane_current_path}"

# Send Window to Display 2
bind-key "BSpace" move-window -t display2


# Reload config file (change file location to your the tmux.conf you want to use)
bind R source-file ~/.config/tmux/tmux.conf




### MENUS PLUGIN ###

# Menu key
set -g @menus_trigger '='


### POMODORO-PLUS KEYBINDS ###

# Control timer
set -g @pomodoro_toggle 't'                    # Start/pause a Pomodoro/break
set -g @pomodoro_cancel 'T'                    # Cancel the current session
set -g @pomodoro_skip '%'                      # Skip a Pomodoro/break



#######################
#### DESIGN TWEAKS ####
#######################


### CLOCK MODE ###
setw -g clock-mode-colour colour1


### COPY MODE ###
setw -g mode-style 'fg=colour7 bg=colour18 bold'


### PANE BORDERS ###
set -g pane-border-style 'fg=colour240'
set -g pane-active-border-style 'fg=colour248'


### STATUSBAR ###

# Current window stle
setw -g window-status-current-style 'fg=colour232 bg=colour172 bold'
setw -g window-status-current-format ' #I #W #F '

# Other windows style
setw -g window-status-style 'fg=colour166'
setw -g window-status-format ' #I #[fg=colour7]#W #[fg=colour172]#F '

# Bell style
setw -g window-status-bell-style 'fg=colour2 bg=colour1 bold'

# Right side of status bar
set -g status-position bottom
set -g status-justify left
set -g status-style 'fg=colour251'
set -g status-left ''
set -g status-right "#{prefix_highlight}  #{pomodoro_status}  %Y-%m-%d %H:%M "
set -g status-right-length 100
set -g status-left-length 10
set -g status-interval 1

# Prefix Highlight colors
set -g @prefix_highlight_fg 'black' # default is 'colour231'
set -g @prefix_highlight_bg 'colour172'  # default is 'colour04'

# Pomodoro Status Colors
set -g @pomodoro_on "#[fg=$text_red]üçÖ "
set -g @pomodoro_complete "#[fg=$text_green]üçÖ "
set -g @pomodoro_pause "#[fg=$color_yellow]üçÖ "
set -g @pomodoro_prompt_break "#[fg=$color_green]üï§ ? "
set -g @pomodoro_prompt_pomodoro "#[fg=$color_gray]üï§ ? "


### MESSAGES ###
set -g message-style 'fg=colour7 bg=colour0 bold'



#########################
#### PLUGIN SETTINGS ####
#########################


### RESURRECT & CONTINUUM ###

# Automatic tmux server start
#set -g @continuum-boot 'on'

# Automatic session restore
#set -g @continuum-restore 'on'

# Continuum save interval
set -g @continuum-save-interval '2'

# Save pane contents
set -g @resurrect-capture-pane-contents 'on'

# Resurrect these processes automatically
set -g @resurrect-processes 'nvim ssh bpytop neo-matrix'


### NOTIFY PLUGIN ###

# Notification verbose message
set -g @tnotify-verbose-msg 'Tmux task in #S window #W pane #P has finished'

### POMODORO-PLUS PLUGIN ###

# Pomodoro settings
set -g @pomodoro_mins 25                       # The duration of the Pomodoro
set -g @pomodoro_break_mins 5                  # The duration of the break after the Pomodoro completes
set -g @pomodoro_intervals 4                   # The number of intervals before a longer break is started
set -g @pomodoro_long_break_mins 30            # The duration of the long break
set -g @pomodoro_repeat 'off'                  # Automatically repeat the Pomodoros?
set -g @pomodoro_menu_position "R"             # The location of the menu relative to the screen
set -g @pomodoro_sound 'on'                    # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use on Mac)
set -g @pomodoro_notifications 'on'            # Enable desktop notifications from your terminal
set -g @pomodoro_granularity 'on'              # Enables MM:SS (ex: 00:10) format instead of the default (ex: 1m)
set -g @pomodoro_interval_display "[%s/%s]"

# Pomodoro status icons
set -g @pomodoro_on "üçÖ "                      # The formatted output when the Pomodoro is running
set -g @pomodoro_complete "‚úîÔ∏é "                 # The formatted output when the break is running
set -g @pomodoro_pause "‚è∏Ô∏é "                    # The formatted output when the Pomodoro/break is paused
set -g @pomodoro_prompt_break "‚è≤Ô∏é break? "      # The formatted output when waiting to start a break
set -g @pomodoro_prompt_pomodoro "‚è±Ô∏é start? "   # The formatted output when waiting to start a Pomodoro



##############################
#### PLUGINS INSTALLATION ####
##############################


### LIST OF PLUGINS ###
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'rickstaa/tmux-notify'                   # Dependencies: notify-send or osascript, bash, (Optional: wget for Telegram support)
set -g @plugin 'tmux-plugins/tmux-yank'                 # Dependencies: xsel (recomenned) or xclip for X, wl-copy for Wayland, putclip for Cygwin
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'jaclu/tmux-menus'
# set -g @plugin 'alexwforsythe/tmux-which-key'           # Dependencies: python3 (optional for yaml config support), tmux 3.0 or higher
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-cowboy'
set -g @plugin 'gcla/tmux-wormhole'                     # Dependencies: Go 1.13 or higher
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'sainnhe/tmux-fzf'                       # Dependencies: junegunn/fzf, sed, pstree (optional to display process tree), CopyQ (optional to access system clipboard) bash
set -g @plugin 'olimorris/tmux-pomodoro-plus'
set -g @plugin 'tmux-plugins/tmux-continuum'            # Keep last in list, Dependencies: tmux-resurrect, tmux 1.9 or higher

# Testing repos
set -g @plugin 'cat-phish/tmux-witch-key'
# set -g @plugin '/home/jordan/coding/remotes/tmux-witch-key.git'

### TMUX PLUGIN MANAGER ###

# Install TPM if not already installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize Tmux plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
